apply plugin: 'jacoco'

ext {
    coverageSourceDirs = 'src/test/java'
}

jacoco {
    toolVersion = "0.8.3"
    //reportsDir = file("../app/build//reports/rep") // file for reports (xml, html)
    reportsDir = file("../app/build/reports/jacoco/test") // file for reports (xml, html)
    //ReportPath = file("../app/build/reports/jacoco/test/jacocoTestReport.xml")
}
task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = false
        xml.destination = file("../app/build/reports/jacoco/test/jacocoTestReport.xml")
    }

    // The lines below make sure we can report against Kotlin and exclude some Android Stuff
    def fileFilter = [
            '**/*Activity.class',
            '**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*',
            '**/*Test*.*', 'android/**/*.*'
    ]
    def debugTree = fileTree(dir: "$project.buildDir/tmp/kotlin-classes/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
    ])
}
